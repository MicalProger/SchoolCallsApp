<Window x:Class="SchoolCallsApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SchoolCallsApp"
        mc:Ignorable="d"
        Title="MainWindow" Height="400" Width="400" Closed="Window_Closed">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="80"/>
                <RowDefinition Height="40"/>
                <RowDefinition/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Button Margin="5" Padding="5" Content="Добавить пресет" Grid.Row="1" Click="AddPreset"/>
            <Button Margin="5" Padding="5" Content="Добавить урок" Click="AddLesson" Grid.Row="3"/>
            <ListView Margin="5, 5, 5, 2.5" Name="LessonsLW" SelectionChanged="UpdateView" BorderBrush="{StaticResource Colors.Main.Border}" Grid.Row="2">
                <ListView.Resources>

                    <Style TargetType="ListViewItem">
                        <Setter Property="BorderBrush" Value="{StaticResource Colors.Main.Border}"/>
                        <Setter Property="Margin" Value="5, 2.5, 5, 2.5"/>
                        <Setter Property="Template">

                            <Setter.Value>
                                <ControlTemplate  TargetType="{x:Type ListViewItem}">

                                    <Border x:Name="Bd" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="Transparent" 
                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
                              Content="{TemplateBinding Content}" 
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Colors.Pressed.Back}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Colors.Pressed.Border}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Colors.Extra}"/>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Colors.Pressed.Back}"/>

                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Colors.Pressed.Back}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Colors.Pressed.Border}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="Yellow"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Resources>
                <!--<ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="BorderBrush" Value="{StaticResource Colors.Main.Border}"/>
                    <Setter Property="Margin" Value="5, 2.5, 5, 2.5"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource Colors.Extra}"/>
                            <Setter Property="Background" Value="{StaticResource Colors.Main.Back}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                </ListView.ItemContainerStyle>-->
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Text="{Binding Name}" FontSize="20"/>
                            <TextBlock Text="{Binding Limits}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <ListView Margin="5" Name="PresetsLW"  SelectionChanged="UpdatePreset" BorderBrush="{StaticResource Colors.Main.Border}" Grid.Row="0">
                <ListView.Resources>

                    <Style TargetType="ListViewItem">
                        <Setter Property="BorderBrush" Value="{StaticResource Colors.Main.Border}"/>
                        <Setter Property="Margin" Value="5, 2.5, 5, 2.5"/>
                        <Setter Property="Template">

                            <Setter.Value>
                                <ControlTemplate  TargetType="{x:Type ListViewItem}">

                                    <Border x:Name="Bd" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="Transparent" 
                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
                              Content="{TemplateBinding Content}" 
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Colors.Pressed.Back}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Colors.Pressed.Border}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Colors.Extra}"/>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Colors.Pressed.Back}"/>

                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Colors.Pressed.Back}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Colors.Pressed.Border}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Colors.Pressed.Back}"/>
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Colors.Pressed.Border}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Resources>
                <!--<ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="BorderBrush" Value="{StaticResource Colors.Main.Border}"/>
                    <Setter Property="Margin" Value="5, 2.5, 5, 2.5"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource Colors.Extra}"/>
                            <Setter Property="Background" Value="{StaticResource Colors.Main.Back}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                </ListView.ItemContainerStyle>-->
            </ListView>
        </Grid>
        <Frame Name="MainFr" Margin="5,5,5,5" Grid.Column="1" NavigationUIVisibility="Hidden"/>
    </Grid>


</Window>
